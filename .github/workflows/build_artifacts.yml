name: Build Artifacts

on:
  release:
    types: [published]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

permissions:
  contents: write
  actions: write

env:
  GH_TOKEN: ${{ secrets.GH_TOKEN }}

jobs:
  # Build and upload artifacts when release is published (including pre-releases)
  #
  # On: Release is published (draft)
  # Do: 1. Build artifacts for all platforms
  #     2. Upload artifacts to release
  build-artifacts:
    if: github.event.release.draft
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: macos-latest
            target: aarch64-apple-darwin
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
    steps:
      - uses: actions/checkout@v4

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          target: ${{ matrix.target }}
          override: true

      - name: Add x86_64-unknown-linux-musl target
        if: matrix.target == 'x86_64-unknown-linux-musl'
        run: |
          rustup target add x86_64-unknown-linux-musl
          sudo apt-get update && sudo apt-get install -y musl-tools

      - name: Install Dependencies for musl Target
        if: matrix.target == 'x86_64-unknown-linux-musl'
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config libssl-dev

      - name: Build for target
        run: |
          cargo build \
            -Z unstable-options \
            --profile dev \
            --artifact-dir bin \
            --target ${{ matrix.target }}

      - name: Zip artifacts
        run: zip -r git-ai-${{ matrix.target }}.zip bin/git-*

      - name: Upload artifacts
        uses: softprops/action-gh-release@v2
        with:
          files: git-ai-*.zip
          tag_name: ${{ github.event.release.tag_name }}

  # Publish to crates.io when release is published
  #
  # On: Release is published
  # Do: 1. Publish to crates.io
  publish:
    needs: build-artifacts
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true

      - name: Publish to crates.io
        run: cargo publish --allow-dirty
