name: Rust

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always
  APP_OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Cache cargo registry
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          default: true
          profile: minimal
          components: rustfmt,clippy
      - name: Build git-ai-hook
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --bin git-ai-hook --no-default-features
      - name: Install git-ai
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: --path . --bin git-ai --no-default-features
      # - name: Run tests
      #   uses: actions-rs/cargo@v1
      #   with:
      #     command: test
      #     args: --no-default-features
      # - name: Rust fmt
      #   uses: actions-rs/cargo@v1
      #   with:
      #     command: fmt
      #     args: --all -- --check
      # - name: Rust clippy
      #   uses: actions-rs/cargo@v1
      #   with:
      #     command: clippy
      #     args: --all -- --deny warnings
      - name: Test install hook
        run: git ai hook install
      - name: Define api keys
        run: git ai config set openai_api_key ${{ secrets.OPENAI_API_KEY }}
      - name: Test simulate
        run: ./simulate.sh