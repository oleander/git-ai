name: CD

on:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write

env:
  CARGO_TERM_COLOR: always

# jobs:
#   build-x86:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v4

#       - name: Add target
#         run: rustup target add x86_64-unknown-linux-musl

#       - name: Compile
#         id: compile-x86
#         uses: rust-build/rust-build.action@v1.4.5
#         with:
#           RUSTTARGET: x86_64-unknown-linux-musl
#           UPLOAD_MODE: none

#       - name: Upload artifact
#         uses: actions/upload-artifact@v3
#         with:
#           name: Binary-x86
#           path: |
#             ${{ steps.compile-x86.outputs.BUILT_ARCHIVE }}
#             ${{ steps.compile-x86.outputs.BUILT_CHECKSUM }}

#   build-arm:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v4

#       - name: Add target
#         run: rustup target add aarch64-unknown-linux-gnu

#       - name: Compile
#         id: compile-arm
#         uses: rust-build/rust-build.action@v1.4.5
#         with:
#           RUSTTARGET: aarch64-unknown-linux-gnu
#           UPLOAD_MODE: none

#       - name: Upload artifact
#         uses: actions/upload-artifact@v3
#         with:
#           name: Binary-arm
#           path: |
#             ${{ steps.compile-arm.outputs.BUILT_ARCHIVE }}
#             ${{ steps.compile-arm.outputs.BUILT_CHECKSUM }}

#   release:
#     needs: [build-x86, build-arm]
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v4
#         with:
#           fetch-depth: 0
#           token: ${{ secrets.GITHUB_TOKEN }}

#       - name: Setup Git
#         run: |
#           git config user.name "Linus Oleander"
#           git config user.email "oleander@users.noreply.github.com"

#       - name: Install cargo-bump
#         run: cargo install cargo-bump

#       - name: Bump version
#         run: |
#           git stash
#           cargo bump patch --git-tag
#           git diff-index --quiet HEAD -- || git commit -a --amend --no-edit
#           git push origin HEAD --tags

#       - name: Download all artifacts
#         uses: actions/download-artifact@v4

#       - name: Create Release
#         uses: softprops/action-gh-release@v2
#         with:
#           tag_name: "0.2.26"
#           files: |
#             Binary-x86
#             Binary-arm

#       - name: Publish to crates.io
#         run: cargo publish --allow-dirty
#         env:
#           CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

# on:
#   release:
#     types: [created]

jobs:
  release:
    name: release ${{ matrix.target }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-musl
            archive: tar.gz tar.xz tar.zst
          - target: x86_64-apple-darwin
            archive: zip
    steps:
      - uses: actions/checkout@4
      - name: Compile and release
        uses: rust-build/rust-build.action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          RUSTTARGET: ${{ matrix.target }}
          ARCHIVE_TYPES: ${{ matrix.archive }}
